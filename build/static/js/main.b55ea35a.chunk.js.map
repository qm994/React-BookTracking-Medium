{"version":3,"sources":["BooksAPI.js","SearchBooksList.js","ErrorBoundary.js","CreateSearchPage.js","CurrentlyReading.js","WantToRead.js","Read.js","CreateMainPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","SearchBooksList","_this","this","console","log","props","searchresult","react_default","a","createElement","className","map","key","style","width","height","backgroundImage","imageLinks","thumbnail","value","onChangeSearchBook","onChange","event","disabled","title","authors","Component","ErrorBoundary","state","hasError","children","error","React","CreateSearchPage","query","searchbooks","updateQuery","val","target","setState","trim","prevProps","prevState","_this2","catch","err","currentState","_this$state","onClick","clickfunc","type","placeholder","src_ErrorBoundary","src_SearchBooksList","readingOnes","currentlyReading","CurrentlyReading","readingBooks","WantToRead","wantToRead","Read","read","CreateMainPage","readingsId","wantToReadId","readId","src_CurrentlyReading","src_WantToRead","src_Read","changeMainPage","BooksApp","showSearchPage","wantReadId","changeSearchPage","includes","BooksAPI","readings","filter","alert","updateBookStatus","newShelve","options","selectedIndex","setAttribute","bookObj","imageURL","src_CreateSearchPage","src_CreateMainPage","allBooks","ReactDOM","render","src_App","document","getElementById"],"mappings":"gOACMA,EAAM,wCAIRC,EAAQC,aAAaD,MACpBA,IACHA,EAAQC,aAAaD,MAAQE,KAAKC,SAASC,SAAS,IAAIC,QAAQ,IAElE,IAAMC,EAAU,CACdC,OAAU,mBACVC,cAAiBR,GAQNS,EAAS,kBACpBC,MAAK,GAAAC,OAAIZ,EAAJ,UAAiB,CAAEO,YACrBM,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SAEVC,EAAS,SAACC,EAAMC,GAAP,OACpBT,MAAK,GAAAC,OAAIZ,EAAJ,WAAAY,OAAiBO,EAAKE,IAAM,CAC/BC,OAAQ,MACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAER,YACtBP,KAAK,SAAAC,GAAG,OAAIA,EAAIC,UCONc,mLAnCH,IAAAC,EAAAC,KAEJ,OADAC,QAAQC,IAAIF,KAAKG,MAAMC,cAEnBC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACRR,KAAKG,MAAMC,cACbJ,KAAKG,MAAMC,aAAaK,IAAI,SAACrB,GAAD,OACpBiB,EAAAC,EAAAC,cAAA,MAAIG,IAAKtB,EAAKE,IACde,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IACpDC,gBAAe,OAAAjC,OAASO,EAAK2B,WAAWC,UAAzB,QAGpBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQU,MAAOlB,EAAKI,MAAMe,mBAAmB9B,GAAO+B,SAAU,SAACC,GAAD,OAAWrB,EAAKI,MAAMgB,SAASC,EAAOhC,KAChGiB,EAAAC,EAAAC,cAAA,UAAQU,MAAM,OAAOI,UAAQ,GAA7B,cACAhB,EAAAC,EAAAC,cAAA,UAAQU,MAAM,oBAAd,qBACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,cAAd,gBACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,QAAd,QACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,QAAd,WAIZZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcpB,EAAKkC,OAClCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBpB,EAAKmC,qBA1BlCC,aCiBbC,6MAhBbC,MAAQ,CACNC,UAAU,2EAOV,OAAI3B,KAAK0B,MAAMC,SACJtB,EAAAC,EAAAC,cAAA,0CAEAP,KAAKG,MAAMyB,4DARQC,GAC9B,MAAM,CAACF,UAAU,UALKG,IAAMN,WCkEnBO,6MA9DbL,MAAM,CACJM,MAAO,GAEPC,YAAa,GACbN,UAAU,KAGZO,YAAc,SAACd,GACb,IAAMe,EAAMf,EAAMgB,OAAOnB,MACzBlB,EAAKsC,SAAS,iBAAM,CAClBL,MAAOG,EAAIG,6FAIIC,EAAWC,GAAU,IHcnBR,EGdmBS,EAAAzC,KAEnCA,KAAK0B,MAAMM,QAAUQ,EAAUR,OAA8B,KAArBhC,KAAK0B,MAAMM,QHYnCA,EGXDhC,KAAK0B,MAAMM,MHY/BpD,MAAK,GAAAC,OAAIZ,EAAJ,WAAkB,CACrBsB,OAAQ,OACRf,QAAQgB,OAAAC,EAAA,EAAAD,CAAA,GACHhB,EADE,CAELkB,eAAgB,qBAElBC,KAAMC,KAAKC,UAAU,CAAEmC,YACtBlD,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SGnBdJ,KAAK,SAACI,IACJA,EAAM2C,OACPY,EAAKJ,SAAS,iBAAO,CACnBJ,YAAa/C,OAGhBwD,MAAM,SAACC,GACNF,EAAKJ,SAAS,SAACO,GAAD,MAAmB,CAC/BX,YAAaW,EAAaX,kDAM5B,IAAAY,EACuB7C,KAAK0B,MAA3BM,EADDa,EACCb,MAAOC,EADRY,EACQZ,YACZ,OACE5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAesC,QAAS9C,KAAKG,MAAM4C,WAArD,SACA1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,SAAOyC,KAAK,OAAOC,YAAY,4BAC7BhC,MAAOe,EAAOb,SAAUnB,KAAKkC,gBAInC7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAEXH,EAAAC,EAAAC,cAAC2C,EAAD,KACE7C,EAAAC,EAAAC,cAAC4C,EAAD,CACA/C,aAAc6B,EACdmB,YAAapD,KAAKG,MAAMkD,iBACxBlC,SAAUnB,KAAKG,MAAMgB,SACrBD,mBAAoBlB,KAAKG,MAAMe,+BApDhBM,aCmChB8B,mLApCH,IAAAvD,EAAAC,KACJ,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACTH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,qBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTR,KAAKG,MAAMoD,aAAa9C,IAAI,SAACrB,GAAD,OACzBiB,EAAAC,EAAAC,cAAA,MAAIG,IAAKtB,EAAKE,IACVe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IACrDC,gBAAe,OAAAjC,OAASO,EAAK2B,WAAWC,UAAzB,QAEnBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQU,MAAM,mBAAmBE,SAAU,SAACC,GAAD,OAAWrB,EAAKI,MAAMgB,SAASC,EAAOhC,KAC7EiB,EAAAC,EAAAC,cAAA,UAAQU,MAAM,OAAOI,UAAQ,GAA7B,cACAhB,EAAAC,EAAAC,cAAA,UAAQU,MAAM,oBAAd,qBACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,cAAd,gBACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,QAAd,QACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,QAAd,WAIZZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcpB,EAAKkC,OAClCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBpB,EAAKmC,uBAzBzCO,IAAMN,WCoCtBgC,mLApCH,IAAAzD,EAAAC,KACJ,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTR,KAAKG,MAAMsD,WAAWhD,IAAI,SAACrB,GAAD,OACzBiB,EAAAC,EAAAC,cAAA,MAAIG,IAAKtB,EAAKE,IACZe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IACvDC,gBAAe,OAAAjC,OAASO,EAAK2B,WAAWC,UAAzB,QAEjBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQU,MAAM,aAAaE,SAAU,SAACC,GAAD,OAAWrB,EAAKI,MAAMgB,SAASC,EAAOhC,KACzEiB,EAAAC,EAAAC,cAAA,UAAQU,MAAM,OAAOI,UAAQ,GAA7B,cACAhB,EAAAC,EAAAC,cAAA,UAAQU,MAAM,oBAAd,qBACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,cAAd,gBACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,QAAd,QACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,QAAd,WAINZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcpB,EAAKkC,OAClCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBpB,EAAKmC,uBAzBnCO,IAAMN,WCqChBkC,mLApCH,IAAA3D,EAAAC,KACJ,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTR,KAAKG,MAAMwD,KAAKlD,IAAI,SAACrB,GAAD,OACnBiB,EAAAC,EAAAC,cAAA,MAAIG,IAAKtB,EAAKE,IACZe,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaG,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IACvDC,gBAAe,OAAAjC,OAASO,EAAK2B,WAAWC,UAAzB,QAEjBX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,UAAQU,MAAM,OAAOE,SAAU,SAACC,GAAD,OAAWrB,EAAKI,MAAMgB,SAASC,EAAOhC,KACnEiB,EAAAC,EAAAC,cAAA,UAAQU,MAAM,OAAOI,UAAQ,GAA7B,cACAhB,EAAAC,EAAAC,cAAA,UAAQU,MAAM,oBAAd,qBACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,cAAd,gBACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,QAAd,QACAZ,EAAAC,EAAAC,cAAA,UAAQU,MAAM,QAAd,WAINZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcpB,EAAKkC,OAClCjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgBpB,EAAKmC,uBAzBzCO,IAAMN,WCoDVoC,mLA5CP,IAAMP,EAAmBrD,KAAKG,MAAMkD,iBAC9BI,EAAazD,KAAKG,MAAMsD,WACxBE,EAAO3D,KAAKG,MAAMwD,KAElBE,EAAa7D,KAAKG,MAAM0D,WACxBC,EAAe9D,KAAKG,MAAM2D,aAC1BC,EAAS/D,KAAKG,MAAM4D,OAE1B,OACI1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,sBAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyD,EAAD,CACC7C,SAAUnB,KAAKG,MAAMgB,SACrBoC,aAAcF,EACdQ,WAAYA,EACZlF,OAAQqB,KAAKG,MAAMxB,SAEpB0B,EAAAC,EAAAC,cAAC0D,EAAD,CACC9C,SAAUnB,KAAKG,MAAMgB,SACrBsC,WAAYA,EACZK,aAAcA,EACdnF,OAAQqB,KAAKG,MAAMxB,SAEpB0B,EAAAC,EAAAC,cAAC2D,EAAD,CACC/C,SAAUnB,KAAKG,MAAMgB,SACrBwC,KAAMA,EACNI,OAAQA,EACRpF,OAAQqB,KAAKG,MAAMxB,WAKxB0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAQuC,QAAS9C,KAAKG,MAAMgE,gBAA5B,uBAxCerC,IAAMN,WCmKpB4C,6MAlKb1C,MAAQ,CAON2C,gBAAgB,EAEhBhB,iBAAkB,GAClBQ,WAAY,GAEZJ,WAAY,GACZa,WAAY,GAEZX,KAAM,GACNI,OAAQ,GAERpC,UAAU,KAQZ4C,iBAAmB,WACjBxE,EAAKsC,SAAS,iBAAO,CACnBgC,gBAAgB,QAIpBF,eAAiB,WACfpE,EAAKsC,SAAS,iBAAO,CACnBgC,gBAAgB,QAKpBnD,mBAAqB,SAAC9B,GACpB,OAAGW,EAAK2B,MAAMmC,WAAWW,SAASpF,EAAKE,IAC9B,mBACCS,EAAK2B,MAAM4C,WAAWE,SAASpF,EAAKE,IACrC,aACCS,EAAK2B,MAAMqC,OAAOS,SAASpF,EAAKE,IACjC,OAEA,UAKXX,OAAS,WACP8F,IACK3F,KAAK,SAACI,GAEH,IAAMwF,EAAWxF,EACdyF,OAAO,SAAAvF,GAAI,MAAmB,qBAAfA,EAAKC,QACjBwE,EAAaa,EAASjE,IAAI,SAAArB,GAAI,OAAIA,EAAKE,KAEvCmE,EAAavE,EAChByF,OAAO,SAAAvF,GAAI,MAAmB,eAAfA,EAAKC,QACjByE,EAAeL,EAAWhD,IAAI,SAAArB,GAAI,OAAIA,EAAKE,KAE3CqE,EAAOzE,EACVyF,OAAO,SAAAvF,GAAI,MAAmB,SAAfA,EAAKC,QACjB0E,EAASJ,EAAKlD,IAAI,SAAArB,GAAI,OAAIA,EAAKE,KAErCS,EAAKsC,SAAS,iBAAO,CACnBgB,iBAAkBqB,EAClBb,WAAYA,EAEZJ,WAAYA,EACZa,WAAYR,EAEZH,KAAMA,EACNI,OAAQA,OAIbrB,MAAM,SAACb,GACJ+C,MAAM,8BAsBhBC,iBAAmB,SAACzD,EAAOhC,GACzB,IAAM0F,EAAY1D,EAAMgB,OAAOnB,MACzB8D,EAAU3D,EAAMgB,OAAO2C,QAC7BA,EAAQA,EAAQC,eAAeC,aAAa,YAAY,GACxD,IAAMC,EAAU,CACZ5F,GAAIF,EAAKE,GACT6F,SAAU/F,EAAK2B,WAAWC,UAC1BM,MAAOlC,EAAKkC,MACZC,QAASnC,EAAKmC,SAElBkD,EAAgBS,EAASJ,GACpBhG,KAAK,SAACK,GAIHY,EAAKsC,SAAS,iBAAO,CACjBwB,WAAY1E,EAAOkE,iBACnBS,aAAc3E,EAAOsE,WACrBM,OAAQ5E,EAAOwE,8FAnC3B3D,KAAKrB,oDAIY4D,EAAWC,GAE1B5C,KAAKC,UAAU2C,EAAUqB,cAAgBjE,KAAKC,UAAUG,KAAK0B,MAAMmC,aAEnEjE,KAAKC,UAAU2C,EAAUsB,gBAAkBlE,KAAKC,UAAUG,KAAK0B,MAAMoC,eAErElE,KAAKC,UAAU2C,EAAUuB,UAAYnE,KAAKC,UAAUG,KAAK0B,MAAMqC,UAE/D9D,QAAQC,IAAI,eACZF,KAAKrB,2CA+BP,OADAsB,QAAQC,IAAIF,KAAK0B,MAAMoC,cAErBzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZR,KAAK0B,MAAM2C,eAEZhE,EAAAC,EAAAC,cAAC6E,EAAD,CACGrC,UAAW/C,KAAKuE,iBAChBlB,iBAAkBrD,KAAK0B,MAAM2B,iBAC7BlC,SAAUnB,KAAK6E,iBACf3D,mBAAoBlB,KAAKkB,qBAGzBb,EAAAC,EAAAC,cAAC8E,EAAD,CAEDhC,iBAAkBrD,KAAK0B,MAAM2B,iBAC7BQ,WAAY7D,KAAK0B,MAAMmC,WACvBJ,WAAYzD,KAAK0B,MAAM+B,WACvBa,WAAYtE,KAAK0B,MAAMoC,aACvBH,KAAM3D,KAAK0B,MAAMiC,KACjBI,OAAQ/D,KAAK0B,MAAMqC,OACnBuB,SAAUtF,KAAK0B,MAAM4D,SACrBnE,SAAUnB,KAAK6E,iBACflG,OAAQqB,KAAKrB,OACbwF,eAAgBnE,KAAKmE,qEAnIGtC,GAC9B,MAAM,CAACF,UAAU,UAvBEG,IAAMN,iBCF7B+D,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.b55ea35a.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\n\nclass SearchBooksList extends Component {\n\n    render(){\n        console.log(this.props.searchresult)\n        return(\n            <ol className=\"books-grid\">\n                {(this.props.searchresult) && \n                this.props.searchresult.map((book) => (\n                        <li key={book.id}>\n                        <div className=\"book\">\n                            <div className=\"book-top\">\n                                <div className=\"book-cover\" style={{ width: 128, height: 193,\n                                     backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n\n                                </div>\n                                <div className=\"book-shelf-changer\">\n                                    <select value={this.props.onChangeSearchBook(book)} onChange={(event) => this.props.onChange(event, book)}>\n                                        <option value=\"move\" disabled>Move to...</option>\n                                        <option value=\"currentlyReading\">Currently Reading</option>\n                                        <option value=\"wantToRead\">Want to Read</option>\n                                        <option value=\"read\">Read</option>\n                                        <option value=\"none\">None</option>\n                                    </select>\n                                </div>\n                            </div>\n                            <div className=\"book-title\">{book.title}</div>\n                            <div className=\"book-authors\">{book.authors}</div>\n                        </div>\n                        </li>         \n                    ))\n                }\n                </ol> \n\n        )\n    }\n}\n\nexport default SearchBooksList;","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends React.Component {\n    state = {\n      hasError: false\n    }\n    static getDerivedStateFromError(error) {\n      return{hasError: true}\n    };\n  \n    render() {\n      if (this.state.hasError) {\n          return <h1>Oops!!! Something went wrong</h1>;\n      } else {\n          return this.props.children;\n          }\n      };\n  };\n\n  export default ErrorBoundary;","import React, { Component } from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\nimport SearchBooksList from \"./SearchBooksList\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nclass CreateSearchPage extends Component{\n  state={\n    query: \"\",\n    // store all search books object\n    searchbooks: [],\n    hasError: false\n  };\n\n  updateQuery = (event) => {\n    const val = event.target.value;\n    this.setState(()=> ({\n      query: val.trim()\n    }));\n  };\n\n  componentDidUpdate(prevProps, prevState){\n\n    if(this.state.query !== prevState.query && this.state.query !== \"\"){\n      BooksAPI.search(this.state.query)\n        .then((books) => {\n          !books.error &&  \n          this.setState(() => ({\n            searchbooks: books\n          }))\n        })\n        .catch((err) => {\n          this.setState((currentState) => ({\n            searchbooks: currentState.searchbooks\n          }))\n        })\n    }\n  };\n\n  render(){\n    const {query, searchbooks} = this.state;\n      return(\n        <div className=\"search-books\">\n          <div className=\"search-books-bar\">\n            <button className=\"close-search\" onClick={this.props.clickfunc}>Close</button>\n            <div className=\"search-books-input-wrapper\">\n              <input type=\"text\" placeholder=\"Search by title or author\"\n                value={query} onChange={this.updateQuery}/>\n\n            </div>\n          </div>\n          <div className=\"search-books-results\">\n            {\n              <ErrorBoundary>\n                <SearchBooksList\n                searchresult={searchbooks}\n                readingOnes={this.props.currentlyReading}\n                onChange={this.props.onChange}\n                onChangeSearchBook={this.props.onChangeSearchBook}\n                />\n              </ErrorBoundary>\n            }\n          </div>\n        </div>\n      )\n\n  }\n}\n\nexport default CreateSearchPage;","import React from \"react\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass CurrentlyReading extends React.Component{\n    render(){\n        return(\n            <div className=\"bookshelf\">\n                  <h2 className=\"bookshelf-title\">Currently Reading</h2>\n                  <div className=\"bookshelf-books\">\n                    <ol className=\"books-grid\">  \n                        {this.props.readingBooks.map((book) => (\n                            <li key={book.id}>\n                                <div className=\"book\">\n                                    <div className=\"book-top\">\n                                        <div className=\"book-cover\" style={{ width: 128, height: 193,\n                                            backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n                                        </div>\n                                        <div className=\"book-shelf-changer\">\n                                            <select value=\"currentlyReading\" onChange={(event) => this.props.onChange(event, book)}>\n                                                <option value=\"move\" disabled>Move to...</option>\n                                                <option value=\"currentlyReading\">Currently Reading</option>\n                                                <option value=\"wantToRead\">Want to Read</option>\n                                                <option value=\"read\">Read</option>\n                                                <option value=\"none\">None</option>\n                                            </select>\n                                        </div>\n                                    </div>\n                                    <div className=\"book-title\">{book.title}</div>\n                                    <div className=\"book-authors\">{book.authors}</div>\n                                </div>\n                          </li>\n                        ))\n                        }\n                    </ol>\n                  </div>\n                </div>\n        )\n    }\n};\n\nexport default CurrentlyReading;\n","import React from \"react\";\n\nclass WantToRead extends React.Component {\n    render(){\n        return(\n            <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Want to Read</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                  {this.props.wantToRead.map((book) => (\n                    <li key={book.id}>\n                      <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div className=\"book-cover\" style={{ width: 128, height: 193, \n                            backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n                          </div>\n                          <div className=\"book-shelf-changer\">\n                            <select value=\"wantToRead\" onChange={(event) => this.props.onChange(event, book)}>\n                              <option value=\"move\" disabled>Move to...</option>\n                              <option value=\"currentlyReading\">Currently Reading</option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">{book.title}</div>\n                        <div className=\"book-authors\">{book.authors}</div>\n                      </div>\n                    </li>\n                  ))\n                  }\n              </ol>\n            </div>\n          </div>\n        )\n    }\n};\n\nexport default WantToRead;","import React from \"react\";\n\nclass Read extends React.Component {\n    render(){\n        return(\n            <div className=\"bookshelf\">\n            <h2 className=\"bookshelf-title\">Read</h2>\n            <div className=\"bookshelf-books\">\n              <ol className=\"books-grid\">\n                  {this.props.read.map((book) => (\n                    <li key={book.id}>\n                      <div className=\"book\">\n                        <div className=\"book-top\">\n                          <div className=\"book-cover\" style={{ width: 128, height: 193, \n                            backgroundImage: `url(${book.imageLinks.thumbnail})`}}>\n                          </div>\n                          <div className=\"book-shelf-changer\">\n                            <select value=\"read\" onChange={(event) => this.props.onChange(event, book)}>\n                              <option value=\"move\" disabled>Move to...</option>\n                              <option value=\"currentlyReading\">Currently Reading</option>\n                              <option value=\"wantToRead\">Want to Read</option>\n                              <option value=\"read\">Read</option>\n                              <option value=\"none\">None</option>\n                            </select>\n                          </div>\n                        </div>\n                        <div className=\"book-title\">{book.title}</div>\n                        <div className=\"book-authors\">{book.authors}</div>\n                      </div>\n                    </li>\n                  ))\n                  }\n              </ol>\n            </div>\n          </div>\n        )\n    }\n};\n\nexport default Read;","import React from \"react\";\nimport CurrentlyReading from \"./CurrentlyReading\"; \nimport wantToRead from \"./WantToRead\";\nimport WantToRead from \"./WantToRead\";\nimport Read from \"./Read\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass CreateMainPage extends React.Component{\n    render(){\n        // // const {readings, wantRead, read} = this.props;\n        const currentlyReading = this.props.currentlyReading;\n        const wantToRead = this.props.wantToRead;\n        const read = this.props.read;\n\n        const readingsId = this.props.readingsId;\n        const wantToReadId = this.props.wantToReadId;\n        const readId = this.props.readId;\n\n        return(\n            <div className=\"list-books\">\n            <div className=\"list-books-title\">\n              <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n              <div>\n                <CurrentlyReading\n                 onChange={this.props.onChange}\n                 readingBooks={currentlyReading}\n                 readingsId={readingsId} \n                 getAll={this.props.getAll}/>\n\n                <WantToRead\n                 onChange={this.props.onChange}\n                 wantToRead={wantToRead} \n                 wantToReadId={wantToReadId}\n                 getAll={this.props.getAll}/>\n\n                <Read\n                 onChange={this.props.onChange}\n                 read={read}\n                 readId={readId}\n                 getAll={this.props.getAll}\n                />\n              </div>\n            </div>\n            \n            <div className=\"open-search\">\n              <button onClick={this.props.changeMainPage}>Add a book</button>\n            </div>\n          </div>\n        )\n    }\n};\n\nexport default CreateMainPage;","import React from 'react'\n//import * as BooksAPI from './BooksAPI'\nimport './App.css';\nimport CreateSearchPage from \"./CreateSearchPage\";\nimport CreateMainPage from \"./CreateMainPage\";\nimport * as BooksAPI from \"./BooksAPI\";\n\nclass BooksApp extends React.Component {\n  state = {\n    /**\n     * TODO: Instead of using this state variable to keep track of which page\n     * we're on, use the URL in the browser's address bar. This will ensure that\n     * users can use the browser's back and forward buttons to navigate between\n     * pages, as well as provide a good URL they can bookmark and share.\n     */\n    showSearchPage: false,\n    // allbooks array state used to store all books in main page\n    currentlyReading: [],\n    readingsId: [],\n    //\n    wantToRead: [],\n    wantReadId: [],\n    //\n    read: [],\n    readId: [],\n    //\n    hasError: false\n  };\n\n  static getDerivedStateFromError(error) {\n    return{hasError: true}\n  };\n\n  // used to return main page\n  changeSearchPage = () => {\n    this.setState(() => ({\n      showSearchPage: false\n    }))\n  };\n\n  changeMainPage = () => {\n    this.setState(() => ({\n      showSearchPage: true\n    }))\n  }\n\n  // set the select tag defualt in search page\n  onChangeSearchBook = (book) => {\n    if(this.state.readingsId.includes(book.id)){\n      return(\"currentlyReading\")\n    } else if(this.state.wantReadId.includes(book.id)){\n      return(\"wantToRead\")\n    } else if(this.state.readId.includes(book.id)){\n      return(\"read\")\n    } else{\n      return(\"none\")\n    }\n  };\n\n  // get all the books in main page Component insert into the DOM tree\n  getAll = () => {\n    BooksAPI.getAll()\n        .then((books) => {\n            //currentlyReading;\n            const readings = books\n              .filter(book => book.shelf === \"currentlyReading\");\n            const readingsId = readings.map(book => book.id);\n           \n            const wantToRead = books\n              .filter(book => book.shelf === \"wantToRead\")\n            const wantToReadId = wantToRead.map(book => book.id);\n            \n            const read = books\n              .filter(book => book.shelf === \"read\"); \n            const readId = read.map(book => book.id);\n           \n            this.setState(() => ({\n              currentlyReading: readings,\n              readingsId: readingsId,\n              //\n              wantToRead: wantToRead,\n              wantReadId: wantToReadId,\n              //\n              read: read,\n              readId: readId\n            })\n            );\n        })\n        .catch((error) => {\n            alert(\"Something Went Wrong!\")\n        })\n  };\n\n  componentDidMount(){\n    this.getAll()\n  };\n\n  // happened when ids changed \n  componentDidUpdate(prevProps, prevState){\n    if(\n      JSON.stringify(prevState.readingsId) !== JSON.stringify(this.state.readingsId)\n      ||\n      JSON.stringify(prevState.wantToReadId) !== JSON.stringify(this.state.wantToReadId)\n      ||\n      JSON.stringify(prevState.readId) !== JSON.stringify(this.state.readId)\n      ){\n      console.log(\"hahahhahaha\")\n      this.getAll()\n    } \n  }\n\n  updateBookStatus = (event, book) => {\n    const newShelve = event.target.value;\n    const options = event.target.options;\n    options[options.selectedIndex].setAttribute('selected', true);\n    const bookObj = {\n        id: book.id,\n        imageURL: book.imageLinks.thumbnail,\n        title: book.title,\n        authors: book.authors\n    };\n    BooksAPI.update(bookObj, newShelve) \n        .then((update) => {\n            // will return an object with 3 shelve arrays inside and \n            // inside each array: there will be ids for each shelve books;\n            //alert(update)\n            this.setState(() => ({\n                readingsId: update.currentlyReading,\n                wantToReadId: update.wantToRead,\n                readId: update.read\n            }));\n                    \n        });\n};\n\n\n  render() {\n    console.log(this.state.wantToReadId)\n    return (\n      <div className=\"app\">\n        {this.state.showSearchPage \n        ? (\n        <CreateSearchPage\n           clickfunc={this.changeSearchPage}\n           currentlyReading={this.state.currentlyReading}\n           onChange={this.updateBookStatus}\n           onChangeSearchBook={this.onChangeSearchBook}\n           />) \n\n        : (<CreateMainPage \n          // currentlyReading={this.state.currentlyReading}\n          currentlyReading={this.state.currentlyReading}\n          readingsId={this.state.readingsId}\n          wantToRead={this.state.wantToRead}\n          wantReadId={this.state.wantToReadId}\n          read={this.state.read}\n          readId={this.state.readId}\n          allBooks={this.state.allBooks}\n          onChange={this.updateBookStatus}\n          getAll={this.getAll}\n          changeMainPage={this.changeMainPage}\n          />\n          )\n          }\n      </div>\n\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}